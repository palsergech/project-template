/* tslint:disable */
/* eslint-disable */
/**
 * Document Management API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface DomainErrorDTO
 */
export interface DomainErrorDTO {
    /**
     * 
     * @type {string}
     * @memberof DomainErrorDTO
     */
    type: DomainErrorDTOTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof DomainErrorDTO
     */
    message?: string;
    /**
     * 
     * @type {{ [key: string]: any; }}
     * @memberof DomainErrorDTO
     */
    details?: { [key: string]: any; };
}


/**
 * @export
 */
export const DomainErrorDTOTypeEnum = {
    DomainError: 'DOMAIN_ERROR'
} as const;
export type DomainErrorDTOTypeEnum = typeof DomainErrorDTOTypeEnum[keyof typeof DomainErrorDTOTypeEnum];


/**
 * Check if a given object implements the DomainErrorDTO interface.
 */
export function instanceOfDomainErrorDTO(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "type" in value;

    return isInstance;
}

export function DomainErrorDTOFromJSON(json: any): DomainErrorDTO {
    return DomainErrorDTOFromJSONTyped(json, false);
}

export function DomainErrorDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): DomainErrorDTO {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'type': json['type'],
        'message': !exists(json, 'message') ? undefined : json['message'],
        'details': !exists(json, 'details') ? undefined : json['details'],
    };
}

export function DomainErrorDTOToJSON(value?: DomainErrorDTO | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'type': value.type,
        'message': value.message,
        'details': value.details,
    };
}

